#!/bin/sh
#
# @license http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author David Hönel <davidh1990@gmx.de>
# @copyright Copyright (c) 2015 David Hönel
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

########################################
# PostProcessing Scripts Configuration #
########################################

### General Settings ###
# Download Path TV Shows (Where are your TV Shows stored after downloading?)
downloadPathTVNative="/opt/SAB1/Downloads/complete/tv" # Your native Language (Full Path!)
downloadPathTVEN="/opt/SAB2/Downloads/complete/tv" # English, if used MUST be separate Folder from your native Language (Full Path!)
# TV Shows Folder
destinationPathTVNative="Deutsch" # Your native Language (Only fill in the Language, leave empty if you don't want to use it)
destinationPathTVEN="English" # English, can be seperate Folder from your native Language if you wish, leave empty if you don't need it)
## Filebot Syntax Settings ## Those Settings are used to properly rename the files
# TV Show Folder
filebotTVFolder="{n.replaceAll(/[!?.]+\$/).replaceAll(/[\`´‘’ʻ]/, \"'\").replace(':',' -')}"
# TV Show File
filebotTVFile="{t.replaceAll(/[!?.]+\$/).replaceAll(/[\`´‘’ʻ]/, \"'\").replace(':',' -')}"
# TV Show Database
filebotTVDB="--db thetvdb"
# TV Show language # Which Language should be used to rename the TV Show Episode?
filebotTVLanguage="--lang en"
# TV Show - Go recursive through the Download Folder. Empty the variable if you don't want to use it.
filebotTVRecursive="-r"
# TV Show - Use non-strict matching
filebotTVNonstrict=""



# Download Path (Where are your Movies stored after downloading?)
downloadPathMoviesNative=""
downloadPathMoviesEN=""
# Movies Folder
destinationPathMoviesNative=""
destinationPathMoviesEN=""
## Filebot Syntax Settings ## Those Settings are used to properly rename the files
# Movie Folder 
filebotMoviesFolder="{n.replaceAll(/[!?.]+\$/).replaceAll(/[\`´‘’ʻ]/, \"'\").replace(':',' -')} ({y}) {vf}"
# Movie File
filebotMoviesFile="{n.replaceAll(/[!?.]+\$/).replaceAll(/[\`´‘’ʻ]/, \"'\").replace(':',' -')} ({y}) {vf}{' CD'+pi}"
# Movies Database
filebotMoviesDB="--db themoviedb"
# Movies Language # Which Language should be used to rename the Movie? 
filebotMoviesLanguage="--lang de"
# Movies - Go recursive through the Download Folder. Empty the variable if you don't want to use it
filebotMoviesRecursive="-r"
# Movies Use Filebot non-strict matching
filebotMoviesNonstrict="-non-strict"
# Filebot Movie Format
filebotMoviesFormat="--format ${destinationPathMovies}/${filebotMoviesFolder}/${filebotMoviesFile}"

# Enable Filter for Stereo Audio
useStereoFilter=""
stereoFilterMatchedFiles="/tmp/stereofiltermatchedfiles"
stereoFilterTempPath="/opt/tmp/"
# Where do you want to move the Movies with Stereo Audio Tracks to?
stereoFilterDestinationPath=""
filebotMoviesFormatStereo="--format ${stereoFilterDestinationPath}/${filebotMoviesFolder}/${filebotMoviesFile}"

# Host for Kodi Library Update
# Enable Kodi Library Update (Default: false, allowed: true, clean)
useKodiLibraryUpdate="false"
kodiHost=""
kodiCleanWaitTime="15"

#
### Remote Sync ###
#
enableRemoteSyncInPostProcessing=""

## TV Shows ##
localSyncPathTV="/mnt/synctv" # Don't change me

# Fill in Path to enable Remote Sync for TV Shows
remoteSyncPathTV=""

# Set Timeframe for Remote Path Sync TV (Default: -14 Days)
remoteSyncAgeTV="-14"

# Use exclude List for TV Shows (Default: false)
useExcludeListTV="false"

## Movies ##
localSyncPathMovies="/mnt/syncmovies"

# Fill in Enable Remote Sync for Movies
remoteSyncPathMovies=""

# Set Timeframe for Remote Path Sync Movies (Default: not set)
remoteSyncAgeMovies=""

# Use exclude List for Movies (Default: false)
useExcludeListMovies="false"

# DON'T CHANGE ANY VARIABLES HERE! #
filesForRemoteSync="/tmp/remotesyncfiles"
excludeListTV="/etc/default/postprocessingexcludelistTV"
exludeListMovies="/etc/default/postprocessingexcludelistMovies"
searchVar1="$2" ## CHANGE LATER
searchVar2="$3" ## CHANGE LATER
searchVar3="S4" ## OLD ageSeason




